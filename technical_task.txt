Техническое задание.
1. Идея
Идея игры базируется на задаче сбора схемы на логических элементах с заданными параметрами
2. Уровни
Игра разбита на несколько уровней, доступ - из меню. Информация по каждому уровню хранится в БД.
2.1 Уровень представляет из себя набор входов, выходов и заданную таблицу соответствия набора входных значений к набору выходных (по сути, задание на уровень)
2.2 Таблица соответствия постоянно находится у игрока перед глазами. Левая часть - входные наборы - находится поблизости от входных блоков, в левой части экрана. Выходные наборы - рядом с выходными наборами, в правой части. Игрок имеет подсветить щелчком пару входной - выходной набор, чтобы не запутаться.
2.3 Игрок, используя логические элементы из их списка в правой части экрана, должен собрать схему, которая бы для всех входных наборов из таблицы соответствия должна выдавать правильные выходные наборы.
2.4 Базовые блоки - И, ИЛИ, НЕ, И-НЕ, ИЛИ-НЕ. ИСКЛ-ИЛИ предлагается как уровень (ур. 1), непосредственно использовать нельзя. Возможно будет добавлена возможность создавать собственные блоки.
2.5 Для самопроверки игрок может изменять состояние блоков входа (двойной щелчок по блоку входа). Игра подсветит цветом (зелёным) те провода, входы и выходы, где появилась логическая 1, остальные останутся серыми. 
2.6 Когда игрок считает, что собрал нужную схему, он нажимает кнопку "Проверить". Игра проверяет схему по наборам из таблицы соответствия, и выдаёт сообщение по результатам проверки ("Уровень пройден"/"Уровень не пройден")
2.7 За пройденные уровни начисляются очки. Очки показываются на заставке после прохождения уровня и в главном меню (в левом верхнем углу экрана).
2.8 Данные по уровню хранятся в БД в виде пар наборов значений. Игра также сохраняет данные о том был ли уровень пройден или нет; в последнем случае также запоминается всё находившееся на "сцене" (расположение блоков и структура их связей), дабы при повторном заходе на уровень пользователь мог начать всё не сначала, а с того момента, где остановился.
2.9 Действия на уровне:
а) Щелчок ПКМ по блоку на сцене: удалить блок
б) Перетаскивание блока с помощью ЛКМ: двигать блок
в) Drag-drop от узла блока до узла блока: соединить проводом два блока
г)  Drag-drop блока из меню - поставить блок на сцену
е) Двойной щелчок по блоку входа - изменить состояние на противоположное (0 -> 1; 1 -> 0) - нужно для самостоятельной проверки схемы игроком
ж) Щелчок по кнопке "Проверить" - проверить уровень
е) Щелчок по кнопке назад - сохранить расположение и вернуться в меню 
3. Конструктор блоков. (Дополнительно)
3.1 Также есть возможность создания собственных блоков.
3.2 Конструктор таких "кастомных" блоков (другое название - песочница, "sandbox") выглядит и работает так же, как и уровень, за одним исключением: количество входов и выходов определяется игроком, а схема не должна удовлетворять никаким таблицам соответствия. Игрок может проверять свою схему, выставляя необходимые значения блоков входа вручную. 
3.3 Данные по собственным блокам также хранятся в БД, сохраняется расположение блоков и структура их связей.
4. Меню
4.1 Главное меню: кнопки "Играть", "Редактор", "Обучение", "Выход"
4.2 Подменю редактора: можно выбрать блок для продолжения редактирования, создать новый или вернуться назад
4.3 Подменю уровней: можно выбрать уровень или вернуться назад
Приложение. Примерные задания для уровней.
Уровень 1.
Описание: Реализовать схему XOR (исключающее ИЛИ)
Входов - 2. Выходов - 1.
Таблица соответствия:
Входы	Выходы
00	0
01	1
10	1
11	0
Очки за уровень: 10
Уровень 2.
Описание: Реализовать дешифратор двухзначного двоичного числа в десятичное
Входов - 2. Выходов - 4.
Входы	Выходы
00	1000
01	0100
10	0010
11	0001
Очки за уровень: 20
Уровень 3.
Описание: Реализовать полусумматор
Входов - 3 (операнды и пред. разряд). Выходов - 2 (сумма и перенос)
Входы	Выходы(первое число - сумма, второе - перенос)
00 0	0 0
00 1	1 0
01 0	1 0
01 1	0 1
10 0	1 0
10 1	0 1
11 0	0 1
11 1	1 1
Очки за уровень: 30
